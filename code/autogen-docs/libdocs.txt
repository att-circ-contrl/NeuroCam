(script)  neurocam-libcam.pl

NeuroCam management script - Camera control library.
Written by Christopher Thomas.



(sub)  NCAM_GetCameraList
This looks for /dev/videoX devices and fetches metadata for them.
No arguments.
Returns a pointer to a hash of metadata hash pointers, indexed by dev name.


(sub)  NCAM_LookUpVendorDevID
Looks up a device's name using lsusb.
Arg 0 is the vendor ID to search for.
Arg 1 is the device ID to search for.
Returns a model string, or undef on error.


(sub)  NCAM_GetCameraMetadata
Fetches metadata for one specific camera device.
FIXME - This may be Logitech-specific! Test with other cameras.
Arg 0 is the camera device name (/dev/videoX).
Returns a metadata hash pointer.


(sub)  NCAM_SetExposure
Sets a camera's exposure (forcing manual mode as a side effect).
This re-detects (and stores) the resulting exposure value, which may
differ from the value requested.
Arg 0 points to the camera's metadata hash.
Arg 1 is the exposure value to set.
Returns the actual exposure value set, or undef on error.


(sub)  NCAM_SetFocus
Sets a camera's focus (forcing auto/manual mode as a side effect).
If 'auto' is specified, the mode is set to automatic.
If a number is specified, the mode is set to manual.
This re-detects (and stores) the resulting focus value, which may
differ from the value requested.
Arg 0 points to the camera's metadata hash.
Arg 1 is the focus value to set.
Returns the actual focus value set, or undef on error.


(sub)  NCAM_TestCapture
Performs a capture test from a camera.
The first return value is 1 if capture was acceptable and 0 if not.
Remaining return values are the number of good and dropped frames.
FIXME - Good and bad frame counts might be mplayer-specific!
Arg 0 points to the camera's metadata hash.
Arg 1 is the desired resolution.
Arg 2 is the desired frame rate.
Returns (good/bad flag, processed frames, dropped frames).


(sub)  NCAM_GetFormatsGivenExposure
Lists the resolution/frame rate combinations a given exposure supports,
for a given camera. Returns exposure to its old setting after probing.
Arg 0 points to the camera's metadata hash.
Arg 1 is the desired exposure setting.
Returns a pointer to a hash of frame rate lists indexed by resolution.


(sub)  NCAM_GetExposureGivenFormat
Returns the maximum exposure setting that works with a given resolution
and frame rate. This may not exceed a specified input value.
Arg 0 points to the camera's metadata hash.
Arg 1 is the desired resolution.
Arg 2 is the desired frame rate.
Arg 3 is the maximum permitted exposure setting.
Returns the resulting exposure setting, or undef if one couldn't be found.


(sub)  NCAM_GrabFrame
Grabs a single frame from a camera.
NOTE - This takes considerably longer than one frame period (not real-time).
Arg 0 points to the camera's metadata hash.
Arg 1 is the desired resolution.
Arg 2 is the filename to write to.
Returns 1 if successful and 0 if not.


(sub)  NCAM_GrabStreamFrame
Grabs a single frame from a remote MJPEG stream.
NOTE - This takes considerably longer than one frame period (not real-time).
Arg 0 is the URL of the MJPEG stream. This should end with ".mjpg".
Arg 1 is the filename to write to.
Returns 1 if successful and 0 if not.


(sub)  NCAM_SortByResolution
Sorts a list of resolutions in sensible order (descending).
Arguments are the unsorted list (by value).
Returns (by value) a list in sorted order.


(sub)  NCAM_FindClosestResolution
Finds the resolution within a list that's closest to a given resolution.
Arg 0 is the resolution to look for.
Remaining arguments are an unsorted list (by value).
Returns an appropriate resolution from the list.

(script)  neurocam-libdebug.pl

NeuroCam management script - Debug routines.
Written by Christopher Thomas.



(sub)  NCAM_StructureToText
This accepts a structure reference, and returns a scalar containing text
describing the contents of the structure.
This is human-readable, and can be reconstructed via TextToStructure().
Arg 0 points to the structure to analyze.
Arg 1 (optional) is an indentation prefix string.
Returns a scalar containing multiple lines of text.

(script)  neurocam-libfocus.pl

NeuroCam management script - Focus scan library.
Written by Christopher Thomas.



(var)  $frametmp
Scratch filenames.


(var)  $tattleframes, $tattleframeprefix
Diagnostics - saving focus sweep files.


(var)  $sweep_samples, $samples_kept
We take a certain number of samples per sweep, and sub-range over the
contiguous set of N that have the best total FOM.


(var)  $use_rgb, $use_crop, $use_vignette
We can do this in RGB space or monochrome.
We can crop the edges of the image or not.
We can apply a vignetting window or not.
FIXME - A FIR to smooth out noise might be a good idea.


(sub)  NCAM_CalcFocusFOM
Calculates a focusing figure of merit for a given focus value.
Larger FOMs are better. FOMs are floating-point values.
FIXME - Using the frame-grab function, so rate isn't used!
Arg 0 points to the camera's metadata hash.
Arg 1 is the resolution to use.
Arg 2 is the frame rate to use.
Arg 3 is the exposure value to use.
Arg 4 is the focus value to use.
Returns the FOM for this focus value.


(sub)  NCAM_SweepFocus
Sweeps the focus range for a camera, to determine which focus value gives
the sharpest results.
Sweep data, in the form of a (focus value => figure of merit) hash, is
also returned.
FIXME - Using the frame-grab function, so rate isn't used!
Arg 0 points to the camera's metadata hash.
Arg 1 is the resolution to use.
Arg 2 is the frame rate to use.
Arg 3 is the exposure value to use.
Returns (focus value, hash pointer).

(script)  neurocam-libmanage.pl

NeuroCam management script - Manager daemon library.
Written by Christopher Thomas.



(var)  $NCAM_mgr_query_timeout
Timeout for manager queries, in milliseconds.
This should only actually be reached if the manager isn't running.


(sub)  NCAM_SendManagerCommand
Transmits a UDP message to the management daemon.
Arg 0 is the socket to use.
Arg 1 is the message to transmit.
No return value.


(sub)  NCAM_GetManagerStatus
Queries the status of the management daemon (and by extension the camera
daemon). This is blocking but will time out if the manager doesn't respond.
No arguments.
Returns a status string, or undef if the daemon is not active.


(sub)  NCAM_LaunchDaemon
Launches a daemon process.
NOTE - The PID is only accurate for list-type invocations!
Otherwise it returns the PID for the shell invocation that parsed the
command string.
Examples:
NCAM_LaunchDaemon('ping localhost');
NCAM_LaunchDaemon( [ 'ping', 'localhost]' ] );
Arg 0 is a scalar or an array reference specifying the command.
Returns the process ID of the child process.

(script)  neurocam-libmjpeg.pl

NeuroCam management script - Motion JPEG library.
Writen by Christopher Thomas.



(sub)  NCAM_ReadBinaryFiles
Reads one or more binary files into memory.
This was intended for use with JPEGs, but can be used for anything.
These are stored as an array of references to data scalars, rather
than as an array of scalars, so that they can be passed by reference.
Arg 0 points to a list of filenames to read from.
Returns a pointer to a list of file data references, or undef on error.


(sub)  NCAM_SendMJPEGFrame
Writes one MJPEG frame to a stream.
NOTE - This will generate SIGPIPE on failure! A custom handler should be
running when this function is called.
Arg 0 is the handle to write to.
Arg 1 points to the JPEG data to write.
Returns 1 if successful and 0 if not.


(sub)  NCAM_StartLiveImagecastMulti
Starts a live imagecasting server - multiple client version.
Send JPEG filenames to this to transmit those frames to all clients.
Send "shutdown" to this to shut down the server and all clients.
Arg 0 is the port to serve streams from. Filename requested is ignored.
Returns a filehandle to send filenames and commands to.
FIXME - Not returning any PIDs!


(sub)  NCAM_StartLiveImagecastSingle
Starts a live imagecasting server - single-client version.
Send JPEG filenames to this to transmit those frames to all clients.
Send "shutdown" to this to shut down the server and all clients.
Arg 0 is the port to serve streams from. Filename requested is ignored.
Returns a filehandle to send filenames and commands to.
FIXME - Not returning any PIDs!

(script)  neurocam-libmt.pl

NeuroCam management script - Multithreading library.
Written by Christopher Thomas.



(sub)  NCAM_SetProcessName
Sets the process name.
NOTE - This makes "kill everything" scripts a bit trickier.
Arg 0 is the new name for the process.
Returns the old name.


(sub)  NCAM_Yield
Forces a yield.
FIXME - This deliberately has nonzero delay!
We're getting CPU hogging with zero delay.
No arguments.
No return value.

(script)  neurocam-libnetwork.pl

NeuroCam management script - Networking library.
Written by Christopher Thomas.



(var)  $next_listen_port
Next available port to assign to people.


(var)  %reserved_ports
Ports that we or another part of the system are using. Not to be allocated.


(var)  $local_network_info_p
Various local network information. Initialized on the first query.


(sub)  NCAM_GetAbsTimeMillis
Returns absolute wall-clock time in milliseconds.
This is relative to midnight on 1 January 1970.
No arguments.
Returns an integer timestamp.


(sub)  NCAM_GetRelTimeMillis


(sub)  NCAM_SleepMillis
Sleeps for the specified number of milliseconds.
Sleeping for 0 milliseconds causes a thread yield.
Arg 0 is the number of milliseconds to sleep for.
No return value.


(sub)  NCAM_SetNextListenPort
Resets the next listen-port value to the specific port number.
This is useful for avoiding port-range collisions between different programs
or processes within a program.
Arg 0 is the port number to set it to.
No return value.


(sub)  NCAM_GetNextListenPort
Returns the next available listening port.
No arguments.
Returns a port ID.


(sub)  NCAM_FlagPortAsUsed
Flags a port as being in use.
This lets our auto-allocation avoid manually-allocated port numbers.
Arg 0 is the port number to reserve.
No return value.


(sub)  NCAM_GetNewPipe
This returns both ends of an anonymous pipe for inter-process
communication. auto-flush is enabled for both ends.
FIXME - This still seems to use line-based buffering.
No arguments.
Returns (reader, writer).


(sub)  NCAM_GetListenSocket
Attempts to create a listening UDP socket handle. This starts listening
immediately.
Arg 0 is the port to listen to.
Returns a filehandle, or undef on error.


(sub)  NCAM_GetTransmitSocket
Attempts to create a transmitting UDP socket handle.
No arguments.
Returns a filehandle, or undef on error.


(sub)  NCAM_GetListenStreamSocket
Attempts to create a listening TCP socket handle. This starts listening
immediately.
Arg 0 is the port to listen to.
Returns a filehandle, or undef on error.


(sub)  NCAM_CloseSocket
Shuts down and closes a socket handle.
Arg 0 is the handle.
No return value.


(sub)  NCAM_HandleCanRead
This performs a non-blocking query of read capability for a filehandle.
Arg 0 is the handle to test.
Returns 1 if the handle can be read from now and 0 otherwise.


(sub)  NCAM_HandleCanWrite
This performs a non-blocking query of write capability for a filehandle.
Arg 0 is the handle to test.
Returns 1 if the handle can be written to now and 0 otherwise.


(sub)  NCAM_GetNetworkInfo
Queries local networking information.
This returns a copy of the network info hash. If this is the first
invocation, probing for network information will be performed first.
This contains "hostname", "hostpacked", and "hostip".
No arguments.
Returns a pointer to a copy of the network info hash.


(sub)  NCAM_CheckReceiveSocket
This checks a UDP socket for messages, returns the message
information if present.
NOTE - Using select() directly to poll multiple sockets is more
efficient, but this still works and abstracts that away.
Arg 0 is the socket handle to check.
Returns (has_message, sender_ip, message). The last two may be undef.


(sub)  NCAM_SendSocket
This sends a message via UDP socket.
Arg 0 is the socket handle to use.
Arg 1 is the target IP address.
Arg 2 is the target port.
Arg 3 is the message to send.
No return value.


(sub)  NCAM_SendAnonSocket
This sends a message via a freshly created UDP socket.
NOTE - Don't do this if you can avoid it! It has overhead.
Arg 0 is the target IP address.
Arg 1 is the target port.
Arg 2 is the message to send.
No return value.


(sub)  NCAM_ShutdownNetwork
This closes private network sockets and performs other cleanup prior to
shutdown.
FIXME - Not needed any more?
No arguments.
No return value.


(sub)  NCAM_ProbeNetworkDevices
This probes for network stream and message sources and assembles
metadata for them.
Arg 0 points to a list of ports to probe.
Arg 1 is the number of milliseconds to wait for responses.
Returns a pointer to a list of metadata hash pointers.

(script)  neurocam-libpost.pl

NeuroCam management script - Post-processing library.
Written by Christopher Thomas.



(var)  $metafilename
Repository metadata filename.


(var)  $lowres_width, $lowres_height
Tuning parameters for the timing analysis.


(var)  $hpf_window


(var)  $seek_window_frames


(var)  $oset_bin_size, $oset_bin_group_radius


(var)  $series_time_hint_weight


(var)  $fake_greyscale
This is needed due to Mint using an old version of PerlMagick.


(var)  $ffmpeg_cmd
ffmpeg command.
Mint uses "avconv", a fork of ffmpeg.


(var)  $debug_tattle_timing
Debugging tattle switches.


(var)  $debug_tattle_gpio


(var)  $debug_tattle_timemath


(var)  $debug_tattle_timeseries


(var)  $debug_write_timeseries_pics, $debug_time_scratchdir


(var)  $debug_timepics_hpf


(sub)  NCAM_ReadLogFile
Reads a log file.
This accepts a list of files that _may_ exist, and reads the first that
_does_ exist.
Arg 0 is the name of the repository directory containing the log files.
Arg 1 points to a list of filenames to check.
Returns a pointer to an array containing log file text, or undef on failure.


(sub)  NCAM_MergeLogs
Merges events from two logs into one log.
This can be used to sort a log by giving an empty array for one argument.
Arg 0 points to an array of log strings.
Arg 1 points to an array of log strings.
Returns a pointer to a merged array of log strings.


(sub)  NCAM_AnalyzeGPIOTime
Analyzes GPIO timing signals within a log file.
Arg 0 points to an array containing the log file text.
Returns (period, offset) of the timing signal, or undef if not found.


(sub)  NCAM_MakeHPFSeries
Extracts a high-pass-filtered data series corresponding to one tile
(one pixel of the thumbnailed image).
Raw samples are normalized to (0..1). HPFd will be (-1..+1) at worst.
Arg 0 points to the list of frame thumbnails (with metadata).
Arg 1 is the tile index to use (pixel index in raster-scan order).
Returns a pointer to an array of {time, rawval, hpfval} tuples.


(sub)  NCAM_EstimateSeriesTimeReal
Estimates the offset of the strobe signal within a data series.
This also returns the "evidence" value for that offset, for comparison
with other series.
A hint and hint weight are provided. A weight of 0 ignores the hint.
Evidence is penalized by the normalized squared distance from the hint,
multiplied by the hint weight and maximum observed evidence value.
Arg 0 points to an array of data series tuples.
Arg 1 is the strobe period.
Returns (offset, evidence).


(sub)  NCAM_EstimateSeriesTimeBlind
Estimates the offset of the strobe signal within a data series.
This also returns the "evidence" value for that offset, for comparison
with other series.
A blind estimate is performed, with no offset hint.
Arg 0 points to an array of data series tuples.
Arg 1 is the strobe period.
Returns (offset, evidence).


(sub)  NCAM_EstimateSeriesTimeHint
Estimates the offset of the strobe signal within a data series.
This also returns the "evidence" value for that offset, for comparison
with other series.
This accepts an offset hint, which is given a preconfigured weight.
Arg 0 points to an array of data series tuples.
Arg 1 is the strobe period.
Arg 2 is the expected offset value.
Returns (offset, evidence).


(sub)  NCAM_EstimateStreamTimeBlind
Calculates an estimate of strobe offset within a set of frames.
This is done without any previous analysis of the image stream.
FIXME - The offset is assumed to be constant within this frame set!
Arg 0 points to the list of frame thumbnails (with metadata).
Arg 1 is the strobe period extracted from GPIO communication.
Returns (offset, tile id).


(sub)  NCAM_EstimateStreamTimeHint
Calculates an estimate of strobe offset within a set of frames.
The tile to test and an expected approximate offset are provided as hints.
FIXME - The offset is assumed to be constant within this frame set!
Arg 0 points to the list of frame thumbnails (with metadata).
Arg 1 is the tile to check.
Arg 2 is the strobe period extracted from GPIO communication.
Arg 3 is the expected offset value.
Returns the calculated offset.


(sub)  NCAM_AdjustTimestampsOneStream
Adjusts timestamps for a single video feed.
Arg 0 is the repository directory name.
Arg 1 is the name of the feed.
Arg 2 points to an array containing the uncorrected log file text.
Returns a pointer to a hash mapping uncorrected lines to corrected lines.


(sub)  NCAM_AdjustTimestampsAllStreams
Adjusts timestamps for all face and scene video feeds.
This reads from "logfile.txt" and creates "logfile-timed.txt".
Lines are moved so that timestamps are still monotonic.
Arg 0 is the repository directory name.
Arg 1 is a port number to send progress reports to.
Returns a pointer to an array containing the revised logfile.


(sub)  NCAM_BuildCompositeFrames
Builds a "Composite" stream that stitches together all standard streams.
This is pretty much the monitor stream with timestamps and no dropped
frames.
This reads from "logfile-timed.txt" or "logfile.txt", and creates
"logfile-composited.txt".
Arg 0 is the repository directory path.
Arg 1 is a port number to send progress reports to.
No return value.


(sub)  NCAM_AddMissingFrameNos
Checks a frame directory for missing frames in sequence and adds symlinks
for those frames.
Arg 0 is the directory to scan.
Returns a pointer to a list of symlinks created.


(sub)  NCAM_PruneSymlinks
This removes specified symlink files (actually any files listed).
Arg 0 points to a list of files, with paths.
No return value.


(sub)  NCAM_GuessFrameRate
Guesses at the frame rate for a directory containing frames.
It does this by looking one level up for the log file and analyzing it.
If this fails, it falls back to a default frame rate.
Arg 0 is the repository directory path.
Arg 1 is the subdirectory name containing the images.
Returns a frame rate.


(sub)  NCAM_TranscodeFrameset
Transcodes a series of frames into a movie.
This creates symlinks for missing frames during transcoding, removing
them afterwards.
Arg 0 is the repository directory path.
Arg 1 is the subdirectory name containing the images.
Arg 2 is the base name of the output file to create.
Arg 3 is a port number to send progress reports to.
No return value.


(sub)  NCAM_FetchRepositoryMetadata
Reads cached metadata information for a repository.
Arg 0 is the repository's root directory path (containing session folders).
Returns a pointer to a hash of session folder metadata entries, or undef
on error.


(sub)  NCAM_IsRepositoryMetadataStale
Checks to see if cached repository metadata is stale.
Arg 0 is the repository's root directory path (containing session folders).
Returns 1 if an update is needed and 0 if not.


(sub)  NCAM_UpdateRepositoryMetadata
Updates cached metadata for a repository (creating metadata if needed).
This may take a while if it has to recalculate repository size.
Arg 0 is the repository's root directory path (containing session folders).
Returns a pointer to a hash of session folder metadata entries, or undef
on error.


(sub)  NCAM_IsExternalDrivePlugged
Queries the presence of external drive hardware.
This doesn't check mounting state.
No arguments.
Returns 1 if an external drive is plugged in and 0 otherwise.


(sub)  NCAM_IsExternalDriveMounted
Queries the mounting state of the external drive.
No arguments.
Returns 1 if an external drive is mounted and 0 otherwise.


(sub)  NCAM_ForceDiskSync
Forces disk synchronization. This may take a while.
No arguments.
No return value.


(sub)  NCAM_MountExternalDrive
Mounts an external drive, if detected and not already mounted.
If a repository root directory is specified, attempts to create that
directory if it doesn't already exist.
Arg 0 is the repository root directory path (relative to the mountpoint).
This may be undefined.
No return value.


(sub)  NCAM_UnmountExternalDrive
Unmounts an external drive, if mounted.
This forces disk synchronization, which may take a while.
No arguments.
No return value.

(script)  neurocam-libsession.pl

NeuroCam management script - Session management library.
Written by Christopher Thomas.



(sub)  NCAM_GetExposureStops
Creates a list of exposure stops, from camera metadata.
Arg 0 points to the camera's metadata hash.
Returns a hash of exposures indexed by stop label.


(sub)  NCAM_ConvertExposureToStop
Converts an absolute exposure value to an "exposure stop" label.
Arg 0 is the value to be converted.
Arg 1 points to the esposure stop hash.
Returns an exposure stop label (hash key).


(sub)  NCAM_SetExposureByStop
Sets a camera's exposure by stop index.
The current stop index in the camera device entry hash is updated.
Arg 0 points to the camera's device entry in the session hash (not its
metadata hash).
Arg 1 is the stop index to set.
No return value.


(sub)  NCAM_CreateBlankSessionConfig
Creates a session configuration hash with blank entries.
This is typically used to set defaults prior to full initialization.
No arguments.
Returns a pointer to a new session configuration hash.


(sub)  NCAM_CreateNewSessionConfig
Creates a new session configuration hash, recording camera and stream
devices but leaving slots empty.
Arg 0 points to the hash of camera metadata hashes.
Arg 1 points to the list of network device metadata hashes.
Arg 2 is the file portion of the URL to offer the stitched monitor feed on.
Arg 3 is the port to offer the stitched monitor feed on.
Arg 4 is the port to listen for commands on.
Returns a pointer to a new session configuration hash.


(sub)  NCAM_EnableOneGPIOTalker
Attempts to ensure that at least one GPIO message source is enabled.
Arg 0 points to the session configuration hash.
No return value.


(sub)  NCAM_PopulateUnassignedSlots
Assigns unassigned devices to unassigned slots.
Arg 0 points to the session configuration hash.
No return value.


(sub)  NCAM_PopulateSlotsByDefault
Populates session slots using detected devices in default order.
Arg 0 points to the session configuration hash.
No return value.


(sub)  NCAM_SessionReservePorts
Walks through a session configuration and flags all used ports as reserved.
Arg 0 points to the session configuration hash.
No return value.


(sub)  NCAM_SessionConfigToText
Converts a session configuration into an array of strings.
Arg 0 points to the session configuration hash.
Returns a pointer to an array of strings.


(sub)  NCAM_TextToSessionConfig
Parses an array of strings into a session configuration hash.
Arg 0 points to the array of strings to parse.
Returns ($session_p, $errstr).
The session hash pointer is undef on error.


(sub)  NCAM_ConfirmSessionCameras
Attempts to read any missing camera metadata from the cameras listed in a
session config hash. Cameras without metadata are pruned (and their slots
released).
Arg 0 points to the session configuration hash, which is modified.
No return value.


(sub)  NCAM_ConfirmSessionDevices
Updates a session configuration based on revised device metadata.
Arg 0 points to the session configuration hash.
Arg 1 points to a hash of camera metadata hashes.
Arg 2 points to a list of network device metadata hashes.
Returns a revised session configuration hash.


(sub)  NCAM_ReadSessionConfigFile
Reads session configuration from a file.
Arg 0 is the name of the file to read.
Returns ($session_p, $errstr).
The session hash pointer is undef on error.


(sub)  NCAM_WriteSessionConfigFile
Writes session configuration to a file.
Arg 0 is the name of the file to write to.
Arg 1 point so the session configuration hash.
Returns 1 on success and 0 on failure.

(script)  neurocam-libstitch.pl

NeuroCam management script - Image stitching library.
Written by Christopher Thomas.



(var)  %stitchslots_3x2, %stitchslots_2x3
Geometry description hashes for various configuration options.
Geometry can be 2x3 or 3x2, with small/medium/large resolution.


(var)  %stitchinfo_3x2_sm, %stitchinfo_3x2_md, %stitchinfo_3x2_lg


(var)  %stitchinfo_2x3_sm, %stitchinfo_2x3_md, %stitchinfo_2x3_lg


(sub)  NCAM_CreateStitchedImage
This assembles a stitched composite image from the specified source images.
Arg 0 is the filename to write to.
Arg 1 points to a hash of filenames to read from, indexed by slot label.
Arg 2 points to the stitching geometry info hash.
Arg 3 points to the stitching slot placement hash.
Arg 4 (optional) is a string to place at the bottom of the stitched image.
Returns 1 if successful and 0 if not.


(sub)  NCAM_CreateSoloImage
This assembles a composite-compatible image from a single source image.
Arg 0 is the filename to write to.
Arg 1 points to a hash of filenames to read from, indexed by slot label.
This should have a single entry (only the first entry is read).
Arg 2 points to the stitching geometry info hash.
Arg 3 points to the stitching slot placement hash.
Arg 4 (optional) is a string to place at the bottom of the stitched image.
Returns 1 if successful and 0 if not.

(script)  neurocam-libweb.pl

NeuroCam management script - Web content library.
Written by Christopher Thomas.



(var)  $page_config
Web page templates, to search-and-replace on.
NOTE - "<< 'foo'", with single-quotes, treats content as literal.
No escaping is needed; use normal HTML without worry.


(var)  $page_config_deventry, $page_config_streamentry, $page_config_talkentry


(var)  $page_config_cellimage, $page_config_cellempty


(var)  %monitor_preview_lut
Auxiliary information for the config page's monitor preview.


(var)  $page_monitor


(var)  $page_monitor_buttons_3x2, $page_monitor_buttons_2x3


(var)  $page_monitor_control, $page_monitor_video


(var)  $page_browser


(var)  $page_browser_table


(var)  $page_browser_eject


(var)  $page_browser_eject_done


(var)  $page_browser_entry


(var)  $page_browser_move


(var)  $page_browser_download


(var)  $page_busy


(var)  $page_busy_cancelbutton


(var)  $page_shutdown


(var)  $page_textmessage


(var)  $page_frameexit


(var)  $page_redirect


(sub)  NCAM_MakeSafeFilename
Transforms an arbitrary string into a filename- and web-safe string.
Arg 0 is the string to translate.
Returns the forced-safe string.


(sub)  NCAM_GetDefaultRepoFolder
Returns a default repository subdirectory name, based on the current time.
No arguments.
Returns a directory name string.


(sub)  NCAM_MakeSafeFieldLabel
Converts a camera, stream, or talker identifier into a web-safe key
for use in input field names.
FIXME - This has a length limit and I may be exceeding that!
Arg 0 is the identifier string to convert.
Returns a short web-name-safe key.


(sub)  NCAM_BuildOptionList
Builds a list of <option value="..."> tags for a <select> list.
Arg 0 points to an array of possible option values.
Arg 1 is the value to flag as the default.
Returns a string containing HTML source.


(sub)  NCAM_GenerateConfigThumbnails
Acquires thumbnail snapshots from cameras and video streams and builds a
mock-up of the monitor screen.
Arg 0 points to the session configuration hash.
Arg 1 is the directory to place auxiliary files in.
No return value.


(sub)  NCAM_GenerateConfigPage
Creates a CGI configuration web page and auxiliary files.
Arg 0 points to the session configuration hash.
Arg 1 is the directory to place auxiliary files in.
Arg 2 is the relative URL prefix for the auxiliary file directory.
This must have a trailing / if a non-empty string.
Arg 3 is an error message to display (optional).
Returns the configuration page's HTML.


(sub)  NCAM_GenerateMonitorPage
Creates a monitoring web page.
No arguments.
Returns the monitor page's HTML.


(sub)  NCAM_GenerateControlPanePage
Creates a monitoring control pane web page.
No arguments.
Returns the control pane's HTML.


(sub)  NCAM_GenerateVideoPanePage
Creates a monitoring video pane web page.
Arg 0 is the host to fetch the video from.
Arg 1 is the port the video is streamed on.
Arg 2 is the filename the video is offered via.
Arg 3 is either undef (auto size) or an image size ("NNNxNNN").
Returns the video pane's HTML.


(sub)  NCAM_GenerateBrowser
Creates a repository browsing page.
Arg 0 points to a list of top-level repository directory tuples. These
have the form { name => (label), path => (path) }.
Arg 1 is an error message to display (optional).
Returns the browser page's HTML.


(sub)  NCAM_GenerateBusyPage
Creates a "please wait for task to finish" page.
Arg 0 is the string containing the task name (which may be "").
Arg 1 is the string containing the current progress (which may be "").
Arg 2 is the page to forward to when no longer busy.
Arg 3 (optional) is 'cancel' if there is to be a cancel button.
Returns the message page's HTML.


(sub)  NCAM_GenerateEjectPage
Creates a "please remove your USB drive" message page.
No arguments.
Returns the message page's HTML.


(sub)  NCAM_GenerateShutdownPage
Creates a "shutting down" message page.
No arguments.
Returns the message page's HTML.


(sub)  NCAM_GenerateMessagePage
Creates a generic user-message page.
Arg 0 is the string containing the message.
Returns the message page's HTML.


(sub)  NCAM_GenerateFrameExitPage
Creates a page with JavaScript code that immediately reassigns the top-level
window's URL. The URL is set to this page's base URL with additional CGI
arguments (which may be an empty string).
Arg 0 is the CGI argument string ("name=value&name=value&...").
Returns the transition page's HTML.


(sub)  NCAM_GenerateRedirectPage
Creates a page with a redirect header that immediately transitions to a
different page.
Arg 0 is the URL to transition to.
Returns the transition page's HTML.


(sub)  NCAM_UpdateSessionFromCGI
Parses config-page CGI parameters and alters an existing configuration
accordingly.
Arg 0 points to the session configuration hash.
Arg 1 points to the CGI parameter hash.
No return value.

